{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkorzenstein/repos/weather_app_react/src/components/Current.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { WeatherContext } from \"./WeatherContext\";\nimport Search from \"./Search\"; // cloud images imported below\n\nimport Clear from \"../weatherimages/Clear.png\";\nimport Hail from \"../weatherimages/Hail.png\";\nimport HeavyCloud from \"../weatherimages/HeavyCloud.png\";\nimport HeavyRain from \"../weatherimages/HeavyRain.png\";\nimport LightCloud from \"../weatherimages/LightCloud.png\";\nimport LightRain from \"../weatherimages/LightRain.png\";\nimport Shower from \"../weatherimages/Shower.png\";\nimport Sleet from \"../weatherimages/Sleet.png\";\nimport Snow from \"../weatherimages/Snow.png\";\nimport Thunderstorm from \"../weatherimages/Thunderstorm.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Current = () => {\n  _s();\n\n  var _weather$list, _weather$list$0$weath, _weather$list2, _weather$city;\n\n  const [city, setCity] = useContext(WeatherContext);\n  const [weather, updateWeather] = useContext(WeatherContext);\n  const month = `${new Date().toLocaleString(\"en-US\", {\n    month: \"long\"\n  })}`;\n  const date = `${new Date().toLocaleString(\"en-US\", {\n    day: \"2-digit\"\n  })}`;\n  const clouds = weather === null || weather === void 0 ? void 0 : (_weather$list = weather.list) === null || _weather$list === void 0 ? void 0 : (_weather$list$0$weath = _weather$list[0].weather) === null || _weather$list$0$weath === void 0 ? void 0 : _weather$list$0$weath[0].description; //   Functionality below\n  // const images = (clouds) => {\n  //     if(clouds === \"clear sky\" ? Clear : false)\n\n  const cloudImage = cloudType => {\n    const values = {\n      clear: Clear,\n      hail: Hail,\n      \"heavy clouds\": HeavyCloud,\n      \"heavy rain\": HeavyRain,\n      \"light rain\": LightRain,\n      showers: Shower,\n      sleet: Sleet,\n      snow: Snow,\n      thunderstorm: Thunderstorm\n    };\n    const cloudImage = cloudType.map(i => values[i] === cloudType);\n    return cloudImage;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"current\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"current-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"check\",\n          id: \"check\",\n          name: \"check\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"opener\",\n          for: \"check\",\n          children: \"Search here please\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"cloud\",\n          src: LightCloud\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"current-temperature\",\n        children: [Math.round((weather === null || weather === void 0 ? void 0 : (_weather$list2 = weather.list) === null || _weather$list2 === void 0 ? void 0 : _weather$list2[0].main.temp) - 273), \"C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: clouds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-city-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Today \\u2022 \", date, \" \", month]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: weather === null || weather === void 0 ? void 0 : (_weather$city = weather.city) === null || _weather$city === void 0 ? void 0 : _weather$city.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Current, \"EO+5dZmG3U3PBcBGICEBNDPVezk=\");\n\n_c = Current;\nexport default Current;\n\nvar _c;\n\n$RefreshReg$(_c, \"Current\");","map":{"version":3,"sources":["/Users/stephenkorzenstein/repos/weather_app_react/src/components/Current.js"],"names":["React","useState","useContext","WeatherContext","Search","Clear","Hail","HeavyCloud","HeavyRain","LightCloud","LightRain","Shower","Sleet","Snow","Thunderstorm","Current","city","setCity","weather","updateWeather","month","Date","toLocaleString","date","day","clouds","list","description","cloudImage","cloudType","values","clear","hail","showers","sleet","snow","thunderstorm","map","i","Math","round","main","temp","name"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { WeatherContext } from \"./WeatherContext\";\nimport Search from \"./Search\";\n// cloud images imported below\nimport Clear from \"../weatherimages/Clear.png\";\nimport Hail from \"../weatherimages/Hail.png\";\nimport HeavyCloud from \"../weatherimages/HeavyCloud.png\";\nimport HeavyRain from \"../weatherimages/HeavyRain.png\";\nimport LightCloud from \"../weatherimages/LightCloud.png\";\nimport LightRain from \"../weatherimages/LightRain.png\";\nimport Shower from \"../weatherimages/Shower.png\";\nimport Sleet from \"../weatherimages/Sleet.png\";\nimport Snow from \"../weatherimages/Snow.png\";\nimport Thunderstorm from \"../weatherimages/Thunderstorm.png\";\n\nconst Current = () => {\n  const [city, setCity] = useContext(WeatherContext);\n  const [weather, updateWeather] = useContext(WeatherContext);\n\n  const month = `${new Date().toLocaleString(\"en-US\", { month: \"long\" })}`;\n  const date = `${new Date().toLocaleString(\"en-US\", { day: \"2-digit\" })}`;\n\n  const clouds = weather?.list?.[0].weather?.[0].description;\n\n  //   Functionality below\n  // const images = (clouds) => {\n  //     if(clouds === \"clear sky\" ? Clear : false)\n\n  const cloudImage = (cloudType) => {\n    const values = {\n      clear: Clear,\n      hail: Hail,\n      \"heavy clouds\": HeavyCloud,\n      \"heavy rain\": HeavyRain,\n      \"light rain\": LightRain,\n      showers: Shower,\n      sleet: Sleet,\n      snow: Snow,\n      thunderstorm: Thunderstorm,\n    };\n    const cloudImage = cloudType.map((i) => values[i] === cloudType);\n    return cloudImage;\n  };\n\n  return (\n    <section className=\"current\">\n      <div className=\"current-container\">\n        <span className=\"current-nav\">\n          <input className=\"check\" id=\"check\" name=\"check\" type=\"checkbox\" />\n          <label class=\"opener\" for=\"check\">\n            Search here please\n          </label>\n          <a>0</a>\n        </span>\n        <Search />\n        <div className=\"current-img\">\n          <img alt=\"cloud\" src={LightCloud} />\n        </div>\n        <h1 className=\"current-temperature\">\n          {Math.round(weather?.list?.[0].main.temp - 273)}C\n        </h1>\n        <h4>{clouds}</h4>\n        <div className=\"current-city-date\">\n          <p>\n            Today • {date} {month}\n          </p>\n          <h4>{weather?.city?.name}</h4>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Current;\n"]},"metadata":{},"sourceType":"module"}