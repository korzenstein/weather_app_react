{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkorzenstein/repos/weather_app_react/src/components/WeatherContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherContext = /*#__PURE__*/createContext();\nexport const WeatherProvider = props => {\n  _s();\n\n  const [city, setCity] = useState();\n  const [weather, updateWeather] = useState();\n  const [toggle, setToggle] = useState(false);\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: ([city, setCity], [weather, updateWeather]),\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherProvider, \"4A1C66EbE9wH43M1brEdE0jtXjQ=\");\n\n_c = WeatherProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"sources":["/Users/stephenkorzenstein/repos/weather_app_react/src/components/WeatherContext.js"],"names":["React","createContext","useState","axios","WeatherContext","WeatherProvider","props","city","setCity","weather","updateWeather","toggle","setToggle","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,OAAO,MAAMC,cAAc,gBAAGH,aAAa,EAApC;AAEP,OAAO,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,aAAV,IAA2BR,QAAQ,EAAzC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,GAAE,CAACK,IAAD,EAAOC,OAAP,GAAiB,CAACC,OAAD,EAAUC,aAAV,CAAnB,CADL;AAAA,cAGCJ,KAAK,CAACO;AAHP;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAbM;;GAAMR,e;;KAAAA,e","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\n\n\nexport const WeatherContext = createContext();\n\nexport const WeatherProvider = props => {\n    const [city, setCity] = useState();\n    const [weather, updateWeather] = useState()\n    const [toggle, setToggle] = useState(false)\n    ;\n    return (\n        <WeatherContext.Provider \n        value={[city, setCity], [weather, updateWeather]}\n        >\n        {props.children}\n        </WeatherContext.Provider>\n    );\n\n};\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}