{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkorzenstein/Desktop/REACT/WeatherAPP/src/components/WeatherContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherContext = /*#__PURE__*/createContext(); // useState \n\nexport const WeatherProivder = props => {\n  _s();\n\n  const [weatherData, setWeatherData] = useState([{}]); // const [city, setCity] = useState(\"\")\n\n  const API_KEY = \"X5w4c4WAqfMGcGd3MLnhwzpJArlcEKft\";\n\n  const fetchCity = async city => {\n    const baseURL = 'http://dataservice.accuweather.com/locations/v1/cities/search';\n    const query = `?apikey=${API_KEY}&q={city}`;\n    const response = await fetch(baseURL + query);\n    const data = await response.json();\n    console.log(data);\n  };\n\n  fetchCity('Toronto'); // functionality\n  // const API_KEY = \"61ff2ff2a45475c0d60c3ba5c2a56d10\";\n  // const fetchWeather = async () => {\n  //     const response = await axios.get(`https:\\\\api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${API_KEY}`);\n  //     setWeatherData(response.data)\n  // };\n  // const express = require('express')\n  // const app = express();\n  // const cors = require('cors');\n  // app.use(cors({origin: \"*\",}))\n\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    weatherData: weatherData,\n    setWeatherData: setWeatherData,\n    city: city,\n    setCity: setCity // fetchWeather={fetchWeather}\n    ,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherProivder, \"Tr2qYDiCH1YyV3vET68SWAKAdEE=\");\n\n_c = WeatherProivder;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherProivder\");","map":{"version":3,"sources":["/Users/stephenkorzenstein/Desktop/REACT/WeatherAPP/src/components/WeatherContext.js"],"names":["React","useState","createContext","WeatherContext","WeatherProivder","props","weatherData","setWeatherData","API_KEY","fetchCity","city","baseURL","query","response","fetch","data","json","console","log","setCity","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,cAAc,gBAAGD,aAAa,EAApC,C,CAEP;;AACA,OAAO,MAAME,eAAe,GAAGC,KAAK,IAAI;AAAA;;AACxC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C,CADwC,CAExC;;AAEA,QAAMO,OAAO,GAAG,kCAAhB;;AAEA,QAAMC,SAAS,GAAG,MAAOC,IAAP,IAAgB;AAC9B,UAAMC,OAAO,GAAG,+DAAhB;AACA,UAAMC,KAAK,GAAI,WAAUJ,OAAQ,WAAjC;AAEA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,GAAGC,KAAX,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAPD;;AAQAN,EAAAA,SAAS,CAAC,SAAD,CAAT,CAdwC,CAgBxC;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAGA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,WAAW,EAAEH,WADb;AAEA,IAAA,cAAc,EAAEC,cAFhB;AAGA,IAAA,IAAI,EAAEG,IAHN;AAIA,IAAA,OAAO,EAAES,OAJT,CAKA;AALA;AAAA,cASKd,KAAK,CAACe;AATX;AAAA;AAAA;AAAA;AAAA,UADJ;AAaC,CA3CM;;GAAMhB,e;;KAAAA,e","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const WeatherContext = createContext();\n\n// useState \nexport const WeatherProivder = props => {\nconst [weatherData, setWeatherData] = useState([{}])\n// const [city, setCity] = useState(\"\")\n\nconst API_KEY = \"X5w4c4WAqfMGcGd3MLnhwzpJArlcEKft\";\n\nconst fetchCity = async (city) => {\n    const baseURL = 'http://dataservice.accuweather.com/locations/v1/cities/search'\n    const query = `?apikey=${API_KEY}&q={city}`\n\n    const response = await fetch(baseURL + query);\n    const data = await response.json();\n    console.log(data);\n}\nfetchCity('Toronto')\n\n// functionality\n// const API_KEY = \"61ff2ff2a45475c0d60c3ba5c2a56d10\";\n// const fetchWeather = async () => {\n//     const response = await axios.get(`https:\\\\api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${API_KEY}`);\n\n//     setWeatherData(response.data)\n// };\n\n// const express = require('express')\n// const app = express();\n// const cors = require('cors');\n// app.use(cors({origin: \"*\",}))\n\n\nreturn (\n    <WeatherContext.Provider\n    weatherData={weatherData}\n    setWeatherData={setWeatherData}\n    city={city}\n    setCity={setCity}\n    // fetchWeather={fetchWeather}\n    \n    \n    >\n        {props.children}\n    </WeatherContext.Provider>\n)\n}"]},"metadata":{},"sourceType":"module"}